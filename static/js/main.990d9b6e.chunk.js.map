{"version":3,"sources":["components/card-list/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","name","email","CardList","monsters","map","id","SearchBox","placeholder","handlechange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","filteredMonsters","filter","toLowerCase","inculdes","handleChange","e","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBACAC,IAAI,UACJC,IAAK,qEAEL,6BAAMH,EAAMI,QAAQC,OACpB,4BAAIL,EAAMI,QAAQE,YCJbC,G,MAAW,SAAAP,GAAK,OAC5B,qBAAKC,UAAY,aAAjB,SAEOD,EAAMQ,SAASC,KAAI,SAAAL,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAAUA,GAAtBA,EAAQM,WCNdC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAYC,EAAf,EAAeA,aAAf,OACrB,uBACAZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCoCCG,G,wDArCb,aAAe,IAAD,8BACZ,gBAEKC,MAAO,CACVT,SAAU,GACVU,YAAa,IALH,E,qDAShB,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKC,SAAS,CAAChB,SAAUe,S,oBAIxC,WAAS,IAAD,OACN,EAAkCE,KAAKR,MAA/BT,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZQ,EAAmBlB,EAASmB,QAAO,SAAAvB,GAAO,OAC9CA,EAAQC,KAAKuB,cAAcC,SAASX,EAAYU,kBAIlD,OACA,sBAAK3B,UAAU,MAAf,UACE,cAAC,EAAD,CACCW,YAAa,kBACbkB,aAAc,SAAAC,GAAC,OACd,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,WAGtC,cAAC,EAAD,CAAUzB,SAAWkB,W,GAhCVQ,IAAMC,YCKTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.990d9b6e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img \r\n        alt='monster' \r\n        src={'https://robohash.org/&{ props.monster.id }?set=set2&size=180*180'}\r\n        />\r\n        <h2>{ props.monster.name }</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport { Card } from './card.component';\r\n\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n <div className = 'card-list '>\r\n        {\r\n        props.monsters.map(monster => (\r\n        <Card key={monster.id} monster={ monster} />)\r\n        )\r\n      }\r\n </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder,handlechange }) => (\r\n    <input\r\n    className='search'\r\n    type='search' \r\n    placeholder={placeholder} \r\n    onChange={handlechange}\r\n\r\n    />\r\n);","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox} from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends React.Component{\n  constructor() {\n    super();\n\n    this.state= {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monsters: users}));\n  \n}\n\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().inculdes(searchField.toLowerCase())\n      );\n\n\n    return(\n    <div className='App'>\n      <SearchBox\n       placeholder ='search monsters'\n       handleChange={e => \n        this.setState({searchField: e.target.value})\n       }\n       />\n       <CardList monsters={ filteredMonsters } />   \n    </div>\n  );\n }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}